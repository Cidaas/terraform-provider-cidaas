---
page_title: "{{.Name}} {{.Type}} - {{.ProviderName}}"
subcategory: ""
description: |-
{{ .Description | plainmarkdown | trimspace | prefixlines "  " }}
---

# {{.Name}} ({{.Type}})

{{ .Description | trimspace }}


## V2 to V3 Migration:
If you are migrating from v2 to v3, please note the following changes in the v3 version:

### Attributes not supported in app config anymore:

- client_secret_expires_at
- client_id_issued_at
- push_config
- created_at
- updated_at
- admin_client
- deleted
- app_owner
- application_type

### Change in data types of some attributes

 - social_providers
 - custom_providers
 - saml_providers
 - ad_providers

 The above attributes now has to be provided as set of objects.

 #### Example:
 ```terraform
 {
  ...
  social_providers = [
    {
        logo_url      = "https://cidaas.com/logo-url"
        provider_name = "sample-custom-provider"
        display_name  = "sample-custom-provider"
        type          = "CUSTOM_OPENID_CONNECT"
        is_provider_visible = true
        domains = ["cidaas.de"]
    },
    {
        logo_url      = "https://cidaas.com/logo-url"
        provider_name = "sample-custom-provider"
        display_name  = "sample-custom-provider"
        type          = "CUSTOM_OPENID_CONNECT"
        is_provider_visible = true
        domains = ["cidaas.de"]
    },
  ]
 }
 ```
### Handling schema change error for existing state
If you encounter the following error message when the below specified attributes are present in the state, please follow the steps to fix the error:

```shell
Error: Unable to Read Previously Saved State for UpgradeResourceState
...
There was an error reading the saved resource state using the current resource schema.
...
AttributeName("group_selection"): invalid JSON, expected "{", got "["
```

#### Affected Attributes:
- group_selection
- login_spi
- mfa
- mobile_settings

To resolve this issue, manually update the Terraform state file by following these steps:

1. Open the state file (`terraform.tfstate`) and locate the `cidaas_app.<resource_name_in_your_config>` resource.
2. Search for the affected attributes listed above.
3. Update their types to JSON objects. Ensure they are set as objects (`{}`) and not arrays (`[]`).

##### Example:

Before:
```json
"group_selection": [
  {
    "selectable_groups" : ["developer-users"]
    "selectable_group_types" : ["sample"]
    "always_show_group_selection" : null
  }
]
```

After:
```json
"group_selection": {
  "selectable_groups" : ["developer-users"]
  "selectable_group_types" : ["sample"]
  "always_show_group_selection" : null
}
```

Alternatively, you can resolve the issue by deleting the existing state of the specific resource and importing it from Cidaas.
However, this approach can be risky, so please proceed with caution.
Ensure you only delete the specific resource from the state file that is causing the error, not the entire file or any other resources.

From version 3.3.0, the attribute `common_configs` is not supported anymore. Instead, we encourage you to use the custom module **terraform-cidaas-app**.
The module provides a variable with the same name `common_configs` which
supports all the attributes in the resource app except `client_name`. With this module you can avoid the repeated configuration and assign the common properties
of multiple apps to a common variable and inherit the properties.

Link to the custom module https://github.com/Cidaas/terraform-cidaas-app

##### Module usage:

```hcl
// local.tfvars
common_configs = {
  client_type     = "SINGLE_PAGE"
  company_address = "Wimsheim"
  company_name    = "WidasConcepts GmbH"
  company_address = "Maybachstra√üe 2, 71299 Wimsheim, Germany"
  company_website = "https://widas.com"
  redirect_uris = [
    "https://cidaas.de/callback",
  ]
  allowed_logout_urls = [
    "https://cidaas.de/logout"
  ]
  allowed_scopes = [
    "openid",
  ]
}

// main.tf
provider "cidaas" {
  base_url = "https://cidaas.de"
}

module "app1" {
  source = "git@github.com:Cidaas/terraform-cidaas-app.git"

  providers = {
    cidaas = cidaas
  }
  client_name    = "Demo App"
  common_configs = var.common_configs
}

module "app2" {
  source = "git@github.com:Cidaas/terraform-cidaas-app.git"
  providers = {
    cidaas = cidaas
  }
  client_name    = "Demo IOS App"
  client_type    = "IOS"
  common_configs = var.common_configs
}
```
You can explore more on the module in the github repo.

## Example Usage

{{ tffile "examples/resources/cidaas_app/resource.tf" }}

{{ .SchemaMarkdown | trimspace }}

## Import

Import is supported using the following syntax:

```shell
# The import identifier in this command is the client_id of the app to be imported.

terraform import cidaas_app.sample client_id
```